//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

namespace CsharlsCorp.BalanceManager.Model
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class BalanceModelContainer : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto BalanceModelContainer usando la cadena de conexión encontrada en la sección 'BalanceModelContainer' del archivo de configuración de la aplicación.
        /// </summary>
        public BalanceModelContainer() : base("name=BalanceModelContainer", "BalanceModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto BalanceModelContainer.
        /// </summary>
        public BalanceModelContainer(string connectionString) : base(connectionString, "BalanceModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto BalanceModelContainer.
        /// </summary>
        public BalanceModelContainer(EntityConnection connection) : base(connection, "BalanceModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Detail> Details
        {
            get
            {
                if ((_Details == null))
                {
                    _Details = base.CreateObjectSet<Detail>("Details");
                }
                return _Details;
            }
        }
        private ObjectSet<Detail> _Details;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Type> Types
        {
            get
            {
                if ((_Types == null))
                {
                    _Types = base.CreateObjectSet<Type>("Types");
                }
                return _Types;
            }
        }
        private ObjectSet<Type> _Types;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Bill> Invoices
        {
            get
            {
                if ((_Invoices == null))
                {
                    _Invoices = base.CreateObjectSet<Bill>("Invoices");
                }
                return _Invoices;
            }
        }
        private ObjectSet<Bill> _Invoices;

        #endregion
        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Transactions. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Details. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToDetails(Detail detail)
        {
            base.AddObject("Details", detail);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Types. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTypes(Type type)
        {
            base.AddObject("Types", type);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Invoices. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInvoices(Bill bill)
        {
            base.AddObject("Invoices", bill);
        }

        #endregion
    }
    

    #endregion
    
    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BalanceModel", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Bill.
        /// </summary>
        /// <param name="billId">Valor inicial de la propiedad billId.</param>
        /// <param name="denomination">Valor inicial de la propiedad denomination.</param>
        public static Bill CreateBill(global::System.Int32 billId, global::System.String denomination)
        {
            Bill bill = new Bill();
            bill.billId = billId;
            bill.denomination = denomination;
            return bill;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 billId
        {
            get
            {
                return _billId;
            }
            set
            {
                if (_billId != value)
                {
                    OnbillIdChanging(value);
                    ReportPropertyChanging("billId");
                    _billId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("billId");
                    OnbillIdChanged();
                }
            }
        }
        private global::System.Int32 _billId;
        partial void OnbillIdChanging(global::System.Int32 value);
        partial void OnbillIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String denomination
        {
            get
            {
                return _denomination;
            }
            set
            {
                OndenominationChanging(value);
                ReportPropertyChanging("denomination");
                _denomination = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("denomination");
                OndenominationChanged();
            }
        }
        private global::System.String _denomination;
        partial void OndenominationChanging(global::System.String value);
        partial void OndenominationChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BalanceModel", Name="Detail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Detail : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Detail.
        /// </summary>
        /// <param name="detailId">Valor inicial de la propiedad detailId.</param>
        /// <param name="detail1">Valor inicial de la propiedad detail.</param>
        public static Detail CreateDetail(global::System.Int32 detailId, global::System.String detail1)
        {
            Detail detail = new Detail();
            detail.detailId = detailId;
            detail.detail = detail1;
            return detail;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 detailId
        {
            get
            {
                return _detailId;
            }
            set
            {
                if (_detailId != value)
                {
                    OndetailIdChanging(value);
                    ReportPropertyChanging("detailId");
                    _detailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("detailId");
                    OndetailIdChanged();
                }
            }
        }
        private global::System.Int32 _detailId;
        partial void OndetailIdChanging(global::System.Int32 value);
        partial void OndetailIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String detail
        {
            get
            {
                return _detail;
            }
            set
            {
                OndetailChanging(value);
                ReportPropertyChanging("detail");
                _detail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("detail");
                OndetailChanged();
            }
        }
        private global::System.String _detail;
        partial void OndetailChanging(global::System.String value);
        partial void OndetailChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BalanceModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Transaction.
        /// </summary>
        /// <param name="transactionId">Valor inicial de la propiedad transactionId.</param>
        /// <param name="amount">Valor inicial de la propiedad amount.</param>
        /// <param name="date">Valor inicial de la propiedad date.</param>
        public static Transaction CreateTransaction(global::System.Int32 transactionId, global::System.Decimal amount, global::System.DateTime date)
        {
            Transaction transaction = new Transaction();
            transaction.transactionId = transactionId;
            transaction.amount = amount;
            transaction.date = date;
            return transaction;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 transactionId
        {
            get
            {
                return _transactionId;
            }
            set
            {
                if (_transactionId != value)
                {
                    OntransactionIdChanging(value);
                    ReportPropertyChanging("transactionId");
                    _transactionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("transactionId");
                    OntransactionIdChanged();
                }
            }
        }
        private global::System.Int32 _transactionId;
        partial void OntransactionIdChanging(global::System.Int32 value);
        partial void OntransactionIdChanged();
    
        /// <summary>
        /// 
        /// </summary>
        /// <LongDescription>
        /// amout represent the value of the transaction
        /// </LongDescription>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private global::System.Decimal _amount;
        partial void OnamountChanging(global::System.Decimal value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BalanceModel", Name="Type")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Type : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Type.
        /// </summary>
        /// <param name="typeId">Valor inicial de la propiedad typeId.</param>
        /// <param name="type1">Valor inicial de la propiedad type.</param>
        public static Type CreateType(global::System.Int32 typeId, global::System.String type1)
        {
            Type type = new Type();
            type.typeId = typeId;
            type.type = type1;
            return type;
        }

        #endregion
        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 typeId
        {
            get
            {
                return _typeId;
            }
            set
            {
                if (_typeId != value)
                {
                    OntypeIdChanging(value);
                    ReportPropertyChanging("typeId");
                    _typeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("typeId");
                    OntypeIdChanged();
                }
            }
        }
        private global::System.Int32 _typeId;
        partial void OntypeIdChanging(global::System.Int32 value);
        partial void OntypeIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();

        #endregion
    
    }

    #endregion
    
}
